{"version":3,"sources":["App.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","roll","pin","setState","prevState","rolls","concat","score","framescore","frame","isStrike","strikeBonus","isSpare","spareBonus","frameScore","state","startGame","resetGame","firstRoll","secondRoll","thirdRoll","generateRandomRoll","push","max","Math","floor","random","firstRollScore","secondRollScore","thirdRollScore","scoreBoardComponent","react_default","a","createElement","App_Frame","key","frameIndex","className","type","onClick","value","Component","Pins","_ref","thirdPin","undefined","App_Pin","Pin","_ref2","pinClass","Frame","_ref3","App_Pins","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b27dcea7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rolls: [],\n      frameScore:[],\n      score: null\n    }\n  };\n\n  roll = (pin) => {\n    this.setState((prevState) => ({\n      rolls: prevState.rolls.concat(pin)\n    }));\n  }  \n\n  score = () => {\n    let score = 0;\n    let roll = 0;\n    let framescore = [];\n\n    for(let frame = 0; frame < 10; frame++){\n      if(this.isStrike(roll)){\n        score += 10 + this.strikeBonus(roll);        \n        roll += 1;\n      } else if(this.isSpare(roll)){\n        score += 10 + this.spareBonus(roll);\n        roll += 2;\n      } else {\n        score += this.frameScore(roll);\n        roll += 2;\n      }\n      framescore[frame] = score;\n    }\n    \n    this.setState({\n      score: score,\n      frameScore : framescore\n    });\n    return this.state.score;\n  }\n\n  startGame = () => {\n    this.resetGame();  \n    let rolls=[];\n    let firstRoll, secondRoll, thirdRoll;\n    for(let frame = 0; frame < 10; frame++){\n      firstRoll = this.generateRandomRoll(10);\n      rolls.push(firstRoll);\n      if(firstRoll !== 10 && frame !== 9){\n        secondRoll = this.generateRandomRoll(9);\n        if((firstRoll + secondRoll) > 10){\n          secondRoll = 10-firstRoll;\n        }\n        rolls.push(secondRoll);\n      }\n      if(frame === 9){\n        secondRoll = this.generateRandomRoll(10);\n        thirdRoll =  this.generateRandomRoll(10);\n        if(firstRoll !== 10){\n          if((firstRoll + secondRoll) >= 10){\n            secondRoll = 10-firstRoll;\n            rolls.push(secondRoll); \n            rolls.push(thirdRoll);\n          } else {            \n            rolls.push(secondRoll); \n          }   \n        } else {\n          if((firstRoll + secondRoll) >= 10){\n            rolls.push(secondRoll);\n            rolls.push(thirdRoll);\n          } else {\n            rolls.push(secondRoll);\n          }\n        }\n      }\n    }\n    this.setState({\n      rolls:rolls\n    },() => {      \n      this.score();\n    });\n  }\n\n  generateRandomRoll(max){\n    return Math.floor(Math.random()*(max)+1);\n  }\n\n  strikeBonus(roll) {\n    return this.state.rolls[roll+1] + this.state.rolls[roll+2];\n  }\n\n  spareBonus(roll) {\n    return this.state.rolls[roll+2];\n  }\n\n  isStrike(roll) {\n    return this.state.rolls[roll] === 10;\n  }\n\n  isSpare(roll) {\n    return this.frameScore(roll) === 10;\n  }\n\n  frameScore(roll) {\n    return this.state.rolls[roll] + this.state.rolls[roll + 1];\n  }\n\n  resetGame() {\n    this.setState({ rolls: [] });\n  }\n  render() {\n    let roll = 0;\n    let scoreBoardComponent = [],\n        firstRollScore,\n        secondRollScore,\n        thirdRollScore;\n    if(this.state.score){      \n      for(let frame = 0; frame < 10; frame++){\n        if(frame !== 9){\n          if(this.isStrike(roll)){\n            firstRollScore='X';\n            secondRollScore='-';\n            roll +=1;\n          } else if(this.isSpare(roll)){            \n            firstRollScore= this.state.rolls[roll];\n            secondRollScore='/';\n            roll += 2;\n          } else {\n            firstRollScore= this.state.rolls[roll];\n            secondRollScore=this.state.rolls[roll+1];\n            roll += 2;\n          }\n        } else {\n          firstRollScore= (this.state.rolls[roll] === 10 ? 'X' : this.state.rolls[roll]);\n          secondRollScore=((this.state.rolls[roll] + this.state.rolls[roll+1]) === 10 ? '/' : this.state.rolls[roll+1]);\n          thirdRollScore=this.state.rolls[roll+2];          \n          roll+=2;\n        }\n        scoreBoardComponent.push( <Frame key={frame}\n                                  frameIndex={frame+1}\n                                  firstRollScore={firstRollScore}\n                                  secondRollScore={secondRollScore}\n                                  thirdRollScore={thirdRollScore}\n                                  frameScore={this.state.frameScore[frame]}\n                                  />\n                                );\n      }\n    }  \n\n    return (\n      <div className=\"App\">\n        <input type =\"button\" onClick={this.startGame} value = \"Start game\"/>\n        <p>Score board:</p>\n        <div className=\"scoreBoard\">{scoreBoardComponent}</div>\n        <p> Your score is : {this.state.score} </p>\n      </div>\n    );\n  }\n}\n\n\nexport default App;  \n\n\nlet Pins = ({firstRollScore,secondRollScore,thirdRollScore}) => {\n  let thirdPin;\n  if(thirdRollScore !== undefined){\n    thirdPin = <Pin score = {thirdRollScore}/>;\n  }\n  return (\n    <p className='pins'>\n      <Pin score = {firstRollScore}/>\n      <Pin score = {secondRollScore}/>\n      {thirdPin}\n    </p>\n  )\n}\n\nlet Pin = ({score}) => {\n  let pinClass = '';\n  if(score === 'X' || score === '-'){\n    pinClass = 'strike';\n  } else if (score === '/'){\n    pinClass = 'spare';\n  }\n  return <span className={pinClass}>{score}</span>;\n}\n  \n  \nlet Frame = ({frameIndex, firstRollScore, secondRollScore, thirdRollScore, frameScore}) => {  \n  return (\n    <div className='frame'> \n      <span> Frame - {frameIndex} </span>\n      <Pins firstRollScore={firstRollScore} secondRollScore={secondRollScore} thirdRollScore={thirdRollScore}/>\n      {frameScore}  \n    </div>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}